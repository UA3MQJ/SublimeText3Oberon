{
  "scope": "source.oberon",
  "completions":
  [
    "oberon",


    { "trigger": "BOOLEAN", "contents": "BOOLEAN" },
    { "trigger": "CHAR", "contents": "CHAR" },
    { "trigger": "LONGINT", "contents": "LONGINT" },
    { "trigger": "INTEGER", "contents": "INTEGER" },
    { "trigger": "SHORTINT", "contents": "SHORTINT" },
    { "trigger": "REAL", "contents": "REAL" },
    { "trigger": "SHORTREAL", "contents": "SHORTREAL" },
    { "trigger": "LONGREAL", "contents": "LONGREAL" },
    { "trigger": "BYTE", "contents": "BYTE" },
    { "trigger": "SET", "contents": "SET" },
    { "trigger": "LONGSET", "contents": "LONGSET" },
    { "trigger": "CARDINAL", "contents": "CARDINAL" },
    { "trigger": "LONGCARD", "contents": "LONGCARD" },
    { "trigger": "SHORTCARD", "contents": "SHORTCARD" },
    { "trigger": "STRING", "contents": "STRING" },
    { "trigger": "HUGEINT", "contents": "HUGEINT" },
    { "trigger": "ANYPTR", "contents": "ANYPTR" },
    { "trigger": "ANYREC", "contents": "ANYREC" },

    { "trigger": "RETURN", "contents": "RETURN" },
    { "trigger": "EXIT", "contents": "EXIT" },

    { "trigger": "INC", "contents": "INC($1);" },
    { "trigger": "HALT", "contents": "HALT($1);" },
    { "trigger": "ASSERT", "contents": "ASSERT($1);" },
    
    { "trigger": "ORD", "contents": "ORD($1);" },
    { "trigger": "CHR", "contents": "CHR($1);" },
    { "trigger": "ODD", "contents": "ODD($1);" },
    { "trigger": "MAX", "contents": "MAX($1);" },
    { "trigger": "MIN", "contents": "MIN($1);" },
    { "trigger": "DEC", "contents": "DEC($1);" },
    { "trigger": "INCL", "contents": "INCL($1);" },
    { "trigger": "EXCL", "contents": "EXCL($1);" },
    { "trigger": "LEN", "contents": "LEN($1);" },
    { "trigger": "ABS", "contents": "ABS($1);" },
    { "trigger": "BITS", "contents": "BITS($1);" },
    { "trigger": "SHORT", "contents": "SHORT($1);" },
    { "trigger": "SIZE", "contents": "SIZE($1);" },
    { "trigger": "LONG", "contents": "LONG($1);" },
    { "trigger": "COPY", "contents": "COPY($1);" },
    { "trigger": "ENTIER", "contents": "ENTIER($1);" },
    { "trigger": "CAP", "contents": "CAP($1);" },
    { "trigger": "ASH", "contents": "ASH($1);" },

    { "trigger": "PROCEDURE", "contents": "PROCEDURE $1;\nBEGIN\n\t${2}\nEND" },
    { "trigger": "BEGIN", "contents": "BEGIN\n\t$1\nEND" },
    { "trigger": "END", "contents": "END" },

    { "trigger": "OR", "contents": "OR" },
    { "trigger": "DIV", "contents": "DIV" },
    { "trigger": "MOD", "contents": "MOD" },
    { "trigger": "IN", "contents": "IN" },
    { "trigger": "OUT", "contents": "OUT" },
    { "trigger": "IS", "contents": "IS" },

    // { "trigger": "clrscr", "contents": "clrscr;" },   
    // { "trigger": "crt", "contents": "crt" },    
    // { "trigger": "keypressed", "contents": "keypressed;" },   
    // { "trigger": "read", "contents": "read($1);" },   
    // { "trigger": "readkey", "contents": "readkey;" },   
    // { "trigger": "readln", "contents": "readln($1);" },   
    // { "trigger": "write", "contents": "write('$1');" },
    // { "trigger": "writeln", "contents": "writeln('$1');" },
    // { "trigger": "uses", "contents": "uses" },    
    // { "trigger": "inc", "contents": "inc($1);" },   
    // { "trigger": "forward", "contents": "forward;" },   
    // { "trigger": "external", "contents": "external;" },   

    // { "trigger": "Shortint", "contents": "Shortint" },
    // { "trigger": "Integer", "contents": "Integer" },
    // { "trigger": "Longint", "contents": "Longint" },    
    // { "trigger": "Byte", "contents": "Byte" },    
    // { "trigger": "Word", "contents": "Word" },    
    
    // { "trigger": "Boolean", "contents": "Boolean" },    
    // { "trigger": "WordBool", "contents": "WordBool" },    
    // { "trigger": "LongBool", "contents": "LongBool" },    
    // { "trigger": "ByteBool", "contents": "ByteBool" },    
    
    // { "trigger": "Real", "contents": "Real" },    
    // { "trigger": "Single", "contents": "Single" },    
    // { "trigger": "Double", "contents": "Double" },    
    // { "trigger": "Extended", "contents": "Extended" },    
    // { "trigger": "Comp", "contents": "comp" },    
    
    // { "trigger": "String", "contents": "String" },    
    // { "trigger": "Char", "contents": "Char" },    
    // { "trigger": "const", "contents": "const" },    
    // { "trigger": "array", "contents": "array[$1..$2] of" },   

    // { "trigger": "procedure", "contents": "procedure $1;\nbegin\n\t${2}\nend;" },   
    // { "trigger": "function", "contents": "function $1($2):$3;\nbegin\n\tresult :=$4;\nend;" },
    // { "trigger": "Length", "contents": "Length($1)" },
    // { "trigger": "Upcase", "contents": "Upcase($1)" },
    // { "trigger": "with", "contents": "with ($1) do\nbegin\n\t${2}\nend;" }
  ]
}